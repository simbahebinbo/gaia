"use strict";(self.webpackChunkcosmos_hub_docs_site=self.webpackChunkcosmos_hub_docs_site||[]).push([[1619],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return n?a.createElement(h,i(i({ref:t},c),{},{components:n})):a.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2867:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={title:"Joining Testnet",order:3},i=void 0,s={unversionedId:"hub-tutorials/join-testnet",id:"hub-tutorials/join-testnet",title:"Joining Testnet",description:"This tutorial will provide all necessary instructions for joining the current public testnet. If you're interested in more advanced configuration and synchronization options, see Join Mainnet for a detailed walkthrough.",source:"@site/docs/hub-tutorials/join-testnet.md",sourceDirName:"hub-tutorials",slug:"/hub-tutorials/join-testnet",permalink:"/hub-tutorials/join-testnet",draft:!1,tags:[],version:"current",frontMatter:{title:"Joining Testnet",order:3},sidebar:"tutorialSidebar",previous:{title:"Joining Mainnet",permalink:"/hub-tutorials/join-mainnet"},next:{title:"Upgrading the Chain",permalink:"/hub-tutorials/live-upgrade-tutorial"}},l={},p=[{value:"Background",id:"background",level:2},{value:"Version History",id:"version-history",level:3},{value:"How to Join",id:"how-to-join",level:2},{value:"Sync Options",id:"sync-options",level:2},{value:"Step-by-Step Setup",id:"step-by-step-setup",level:2},{value:"Build Tools",id:"build-tools",level:3},{value:"Installation &amp; Configuration",id:"installation--configuration",level:3},{value:"State Sync Setup (Recommended)",id:"state-sync-setup-recommended",level:4},{value:"Cosmovisor Setup (Optional)",id:"cosmovisor-setup-optional",level:3},{value:"Create Service File",id:"create-service-file",level:3},{value:"Start the Service",id:"start-the-service",level:3},{value:"Create a Validator (Optional)",id:"create-a-validator-optional",level:2},{value:"Upgrading Your Node",id:"upgrading-your-node",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This tutorial will provide all necessary instructions for joining the current public testnet. If you're interested in more advanced configuration and synchronization options, see ",(0,r.kt)("a",{parentName:"p",href:"/hub-tutorials/join-mainnet"},"Join Mainnet")," for a detailed walkthrough."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Current Version: v15"),(0,r.kt)("li",{parentName:"ul"},"Chain ID: ",(0,r.kt)("inlineCode",{parentName:"li"},"theta-testnet-001"))),(0,r.kt)("h2",{id:"background"},"Background"),(0,r.kt)("p",null,"The Cosmos Hub Public Testnet is currently running Gaia v13. Visit the ",(0,r.kt)("a",{parentName:"p",href:"https://explorer.theta-testnet.polypore.xyz/"},"testnet explorer")," to view all on-chain activity."),(0,r.kt)("p",null,"For those who just need instructions on performing the upgrade, see the ",(0,r.kt)("a",{parentName:"p",href:"#upgrading-your-node"},"Upgrading Your Node")," section."),(0,r.kt)("h3",{id:"version-history"},"Version History"),(0,r.kt)("p",null,"The table below shows all past and upcoming versions of the public testnet."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"Release"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Upgrade Block Height"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Upgrade Date"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v16.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"TBA"),(0,r.kt)("td",{parentName:"tr",align:"center"},"TBA")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v15.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"20,269,900"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2024-02-13")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v14.1.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"18,986,400"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-11-22")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v14.0.0-rc1"),(0,r.kt)("td",{parentName:"tr",align:"center"},"18,876,500"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-11-15")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v14.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"18,766,800"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-11-08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v13.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"17,996,550"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-09-20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v12.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"17,550,150"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-08-23")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v11.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"17,107,825"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-07-26")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v10.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"16,117,530"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-05-24")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v9.0.0-rc3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"14,476,206"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-02-08")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v8.0.0-rc3"),(0,r.kt)("td",{parentName:"tr",align:"center"},"14,175,595"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2023-01-20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v7.0.0-rc0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"9,283,650"),(0,r.kt)("td",{parentName:"tr",align:"center"},"2022-03-17")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},"v6.0.0"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Genesis"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Launched 2022-03-10")))),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/gaia/releases"},"Gaia release page")," for details on each release."),(0,r.kt)("h2",{id:"how-to-join"},"How to Join"),(0,r.kt)("p",null,"We offer three ways to set up a node in the testnet:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Quickstart scripts",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cosmos/testnets/tree/master/public#bash-script"},"testnets")," repo has shell scripts to set up a node with a single command."))),(0,r.kt)("li",{parentName:"ul"},"Ansible playbooks",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/hyphacoop/cosmos-ansible#-quick-start"},"cosmos-ansible")," repo has an inventory file to set up a node with a single command."))),(0,r.kt)("li",{parentName:"ul"},"Step-by-step instructions",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"The rest of this document provides a step-by-step walkthrough for setting up a testnet node.")))),(0,r.kt)("p",null,"We recommend running public testnet nodes on machines with at least 8 cores, 32GB of RAM, and 300GB of disk space."),(0,r.kt)("h2",{id:"sync-options"},"Sync Options"),(0,r.kt)("p",null,"There are two ways to sync a testnet node, Fastsync and State Sync."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.cometbft.com/v0.34/core/fast-sync"},"Fast Sync")," syncs the chain from genesis by downloading blocks in parallel and then verifying them."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.cometbft.com/v0.34/core/state-sync"},"State Sync")," will look for snapshots from peers at a trusted height and then verifying a minimal set of snapshot chunks against the network.")),(0,r.kt)("p",null,"State Sync is far faster and more efficient than Fast Sync, but Fast Sync offers higher data integrity and more robust history. For those who are concerned about storage and costs, State Sync can be the better option as it minimizes storage usage when rebuilding initial state."),(0,r.kt)("h2",{id:"step-by-step-setup"},"Step-by-Step Setup"),(0,r.kt)("p",null,"The following set of instructions assumes you are logged in as root."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"You can run the relevant commands from a sudoer account."),(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"/root/")," part in service file paths can be changed to ",(0,r.kt)("inlineCode",{parentName:"li"},"/home/<username>/"),".")),(0,r.kt)("h3",{id:"build-tools"},"Build Tools"),(0,r.kt)("p",null,"Install build tools and Go."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"sudo apt-get update\nsudo apt-get install -y make gcc\nwget https://go.dev/dl/go1.21.6.linux-amd64.tar.gz\nsudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.21.6.linux-amd64.tar.gz\nexport PATH=$PATH:/usr/local/go/bin\n")),(0,r.kt)("h3",{id:"installation--configuration"},"Installation & Configuration"),(0,r.kt)("p",null,"You will need to install and configure the Gaia binary using the script below. The Cosmos Hub Public Testnet is running Gaia ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/gaia/releases/tag/v15.0.0-rc0"},(0,r.kt)("inlineCode",{parentName:"a"},"v15.0.0-rc0")),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For up-to-date endpoints like seeds and state sync RPC servers, visit the ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/cosmos/testnets/tree/master/public"},"testnets repository"),".")),(0,r.kt)("p",null,"Build the gaiad binary and initialize the chain home folder."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd $HOME\ngit clone https://github.com/cosmos/gaia\ncd gaia\n# To sync from genesis, comment out the next line.\ngit checkout v15.0.0-rc0\n# To sync from genesis, uncomment the next line and skip the State Sync Setup section.\n# git checkout v6.0.4\nmake install\nexport PATH=$PATH:$HOME/go/bin\ngaiad init <custom_moniker>\n")),(0,r.kt)("p",null,"Prepare the genesis file."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'cd $HOME\nwget https://github.com/cosmos/testnets/raw/master/public/genesis.json.gz\ngzip -d genesis.json.gz\nmv genesis.json $HOME/.gaia/config/genesis.json\n\n# Set minimum gas price & peers\ncd $HOME/.gaia/config\nsed -i \'s/minimum-gas-prices = ""/minimum-gas-prices = "0.005uatom"/\' app.toml\nsed -i \'s/seeds = ""/seeds = "639d50339d7045436c756a042906b9a69970913f@seed-01.theta-testnet.polypore.xyz:26656,3e506472683ceb7ed75c1578d092c79785c27857@seed-02.theta-testnet.polypore.xyz:26656"/\' config.toml\n')),(0,r.kt)("h4",{id:"state-sync-setup-recommended"},"State Sync Setup (Recommended)"),(0,r.kt)("p",null,"State sync requires you to configure a trust height and trust hash. These depend on the current block height, so they will vary depending on when you are joining the network."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Visit a ",(0,r.kt)("a",{parentName:"li",href:"https://explorer.theta-testnet.polypore.xyz/"},"testnet explorer")," to find the block and hash for the current height - 1000."),(0,r.kt)("li",{parentName:"ul"},"Set these parameters in the code snippet below: ",(0,r.kt)("inlineCode",{parentName:"li"},"<BLOCK_HEIGHT>")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"<BLOCK_HASH>"),".")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd $HOME/.gaia/config\nsed -i 's/enable = false/enable = true/' config.toml\nsed -i 's/trust_height = 0/trust_height = <BLOCK_HEIGHT>/' config.toml\nsed -i 's/trust_hash = \"\"/trust_hash = \"<BLOCK_HASH>\"/' config.toml\nsed -i 's/rpc_servers = \"\"/rpc_servers = \"http:\\/\\/state-sync-01.theta-testnet.polypore.xyz:26657,http:\\/\\/state-sync-02.theta-testnet.polypore.xyz:26657\"/' config.toml\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For example, if the block explorer lists a current block height of 12,563,326, we could use a trust height of ",(0,r.kt)("a",{parentName:"li",href:"https://explorer.theta-testnet.polypore.xyz/blocks/12562000"},"12,562,000")," and the trust hash would be ",(0,r.kt)("inlineCode",{parentName:"li"},"6F958861E1FA409639C8F2DA899D09B9F50A66DBBD49CE021A2FF680FA8A9204"),".")),(0,r.kt)("h3",{id:"cosmovisor-setup-optional"},"Cosmovisor Setup (Optional)"),(0,r.kt)("p",null,"Cosmovisor is a process manager that monitors the governance module for incoming chain upgrade proposals. When a proposal is approved, Cosmovisor can automatically download the new binary, stop the chain binary when it hits the upgrade height, switch to the new binary, and restart the daemon. Cosmovisor can be used with either Fast Sync or State Sync."),(0,r.kt)("p",null,"The instructions below provide a simple way to sync via Cosmovisor. For more information on configuration, check out the Cosmos SDK's ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor"},"Cosmovisor documentation"),"."),(0,r.kt)("p",null,"Cosmovisor requires the creation of the following directory structure:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},".gaia\n\u2514\u2500\u2500 cosmovisor\n    \u2514\u2500\u2500 genesis\n        \u2514\u2500\u2500 bin\n            \u2514\u2500\u2500 gaiad\n")),(0,r.kt)("p",null,"Install Cosmovisor and copy Gaia binary to genesis folder:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"go install cosmossdk.io/tools/cosmovisor/cmd/cosmovisor@v1.5.0\nmkdir -p ~/.gaia/cosmovisor/genesis/bin\ncp ~/go/bin/gaiad ~/.gaia/cosmovisor/genesis/bin/\n")),(0,r.kt)("h3",{id:"create-service-file"},"Create Service File"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Cosmos Hub recommends running ",(0,r.kt)("inlineCode",{parentName:"li"},"gaiad")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"cosmovisor")," with the ",(0,r.kt)("inlineCode",{parentName:"li"},"--x-crisis-skip-assert-invariants")," flag. If checking for invariants, operators are likely to see ",(0,r.kt)("inlineCode",{parentName:"li"},"rounding error withdrawing rewards from validator"),". These are expected. For more information see ",(0,r.kt)("a",{parentName:"li",href:"/hub-tutorials/join-mainnet#verify-mainnet"},"Verify Mainnet"),".")),(0,r.kt)("p",null,"Create one of the following service files."),(0,r.kt)("p",null,"If you are not using Cosmovisor: ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/gaiad.service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"[Unit]\nDescription=Gaia service\nAfter=network-online.target\n\n[Service]\nUser=root\nExecStart=/root/go/bin/gaiad start --x-crisis-skip-assert-invariants --home /root/.gaia\nRestart=no\nLimitNOFILE=4096\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"If you are using Cosmovisor: ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/systemd/system/cosmovisor.service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-toml"},"[Unit]\nDescription=Cosmovisor service\nAfter=network-online.target\n\n[Service]\nUser=root\nExecStart=/root/go/bin/cosmovisor run start --x-crisis-skip-assert-invariants --home /root/.gaia\nRestart=no\nLimitNOFILE=4096\nEnvironment='DAEMON_NAME=gaiad'\nEnvironment='DAEMON_HOME=/root/.gaia'\nEnvironment='DAEMON_ALLOW_DOWNLOAD_BINARIES=true'\nEnvironment='DAEMON_RESTART_AFTER_UPGRADE=true'\nEnvironment='DAEMON_LOG_BUFFER_SIZE=512'\nEnvironment='UNSAFE_SKIP_BACKUP=true'\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("h3",{id:"start-the-service"},"Start the Service"),(0,r.kt)("p",null,"Reload the systemd manager configuration."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"systemctl daemon-reload\nsystemctl restart systemd-journald\n")),(0,r.kt)("p",null,"If you are not using Cosmovisor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"systemctl enable gaiad.service\nsystemctl start gaiad.service\n")),(0,r.kt)("p",null,"If you are using Cosmovisor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"systemctl enable cosmovisor.service\nsystemctl start cosmovisor.service\n")),(0,r.kt)("p",null,"To follow the service log, run ",(0,r.kt)("inlineCode",{parentName:"p"},"journalctl -fu gaiad")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"journalctl -fu cosmovisor"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you are using State Sync, the chain will start syncing once a snapshot is found and verified. Syncing to the current block height should take less than half an hour."),(0,r.kt)("li",{parentName:"ul"},"If you are using Block Sync, the chain will start syncing once the first block after genesis is found among the peers. ",(0,r.kt)("strong",{parentName:"li"},"Syncing to the current block height will take several days"),".")),(0,r.kt)("h2",{id:"create-a-validator-optional"},"Create a Validator (Optional)"),(0,r.kt)("p",null,"If you want to create a validator in the testnet, request tokens through the ",(0,r.kt)("a",{parentName:"p",href:"https://discord.com/channels/669268347736686612/953697793476821092"},"faucet Discord channel")," and follow the ",(0,r.kt)("a",{parentName:"p",href:"/validators/validator-setup"},"Running a validator")," instructions provided for mainnet."),(0,r.kt)("h2",{id:"upgrading-your-node"},"Upgrading Your Node"),(0,r.kt)("p",null,"Follow these instructions if you have a node that is already synced and wish to participate in a scheduled testnet software upgrade."),(0,r.kt)("p",null,"When the chain reaches the upgrade block height specified by a software upgrade proposal, the chain binary will halt and expect the new binary to be run (the system log will show ",(0,r.kt)("inlineCode",{parentName:"p"},'ERR UPGRADE "<Upgrade name>" NEEDED at height: XXXX')," or something similar)."),(0,r.kt)("p",null,"There are three ways you can update the binary:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Without Cosmovisor: You must build or download the new binary ahead of the upgrade. When the chain binary halts at the upgrade height:")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Stop the gaiad service with ",(0,r.kt)("inlineCode",{parentName:"li"},"systemctl stop gaiad.service"),"."),(0,r.kt)("li",{parentName:"ul"},"Build or download the new binary, replacing the existing ",(0,r.kt)("inlineCode",{parentName:"li"},"~/go/bin")," one."),(0,r.kt)("li",{parentName:"ul"},"Start the gaiad service with ",(0,r.kt)("inlineCode",{parentName:"li"},"systemctl start gaiad.service"),".")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"With Cosmovisor: You must build or download the new binary and copy it to the appropriate folder ahead of the upgrade."),(0,r.kt)("li",{parentName:"ol"},"With Cosmovisor: Using the auto-download feature, assuming the proposal includes the binaries for your system architecture.")),(0,r.kt)("p",null,"The instructions below are for option 2. For more information on auto-download with Cosmovisor, see the relevant ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/cosmos/cosmos-sdk/tree/main/tools/cosmovisor#auto-download"},"documentation")," in the Cosmos SDK repo."),(0,r.kt)("p",null,"If the environment variable ",(0,r.kt)("inlineCode",{parentName:"p"},"DAEMON_ALLOW_DOWNLOAD_BINARIES")," is set to ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),", Cosmovisor will look for the new binary in a folder that matches the name of the upgrade specified in the software upgrade proposal. For the ",(0,r.kt)("inlineCode",{parentName:"p"},"v16")," upgrade, the expected folder structure would look as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},".gaia\n\u2514\u2500\u2500 cosmovisor\n    \u251c\u2500\u2500 current\n    \u251c\u2500\u2500 genesis\n    \u2502   \u2514\u2500\u2500 bin\n    |       \u2514\u2500\u2500 gaiad\n    \u2514\u2500\u2500 upgrades\n        \u2514\u2500\u2500 v16\n            \u2514\u2500\u2500 bin\n                \u2514\u2500\u2500 gaiad\n")),(0,r.kt)("p",null,"Prepare the upgrade directory"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"mkdir -p ~/.gaia/cosmovisor/upgrades/v16/bin\n")),(0,r.kt)("p",null,"Download and install the new binary version."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"cd $HOME/gaia\ngit pull\ngit checkout v16.0.0-rc0\nmake install\n\n# Copy the new binary to the v16 upgrade directory\ncp ~/go/bin/gaiad ~/.gaia/cosmovisor/upgrades/v16/bin/gaiad\n")),(0,r.kt)("p",null,"When the upgrade height is reached, Cosmovisor will stop the gaiad binary, copy the new binary to the ",(0,r.kt)("inlineCode",{parentName:"p"},"current/bin")," folder and restart. After a few minutes, the node should start syncing blocks using the new binary."))}d.isMDXComponent=!0}}]);